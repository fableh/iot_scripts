#include <ESP8266WiFi.h>
#include <WiFiUdp.h>
#include <WiFiClientSecure.h>
#include "DHT.h"
#include <Wire.h>
#include <DS3231.h>
#define DHTPIN 13
#define DHTTYPE DHT22

DHT dht(DHTPIN, DHTTYPE);

// WiFi configuration

const char* ssid = "<sid>";
const char* password = "<pw>";


//dht var
float h;
float t;

//iot var
const char* host_iot4 = "<iot edge host>"; 

const int httpPort_iot4 = 8699; //port
String url_iot4 = "/measures/88888877"; //sap cp url

void setup() {
  Serial.begin(115200);
// I2C init
  Wire.begin();
  dht.begin();
  Serial.println();
  Serial.print("connecting to WIFI Network: ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
 
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}


void loop() {
  send_temperature_to_iot4_via_edge();
  send_humidity_to_iot4_via_edge();
  //every sesond
  //delay(10000);
  //1h
  delay(3600000);
}



float read_dht_temp() {
  // Read temperature as Celsius
  t = dht.readTemperature();
  Serial.println("temp is: " + String(t));
  if (isnan(h) || isnan(t)) {
    Serial.println("Failed to read from DHT sensor!");
    //   return;
  }
  return t;
}

float read_dht_hum() {
  //read humidity
  h = dht.readHumidity();
  Serial.println("humidity is: " + String(h));
  if (isnan(h) || isnan(t)) {
    Serial.println("Failed to read from DHT sensor!");
    //    return;
  }
  return h;
}

void send_temperature_to_iot4_via_edge() {
  WiFiClient client;
  String post_payload_temp = "{ \"measureIds\": [10], \"values\":" + String(read_dht_temp()) + ", \"logNodeAddr\": [4]}";
  
  if (!client.connect(host_iot4, httpPort_iot4)) {
    Serial.println("connection failed");
    return;
  }
  Serial.println("Try to send temperature.....");
  client.print(String("POST ") + url_iot4 + " HTTP/1.0\r\n" +
               "Host: " + host_iot4 + "\r\n" +
               "Content-Type: application/json;charset=utf-8\r\n" +
               "Content-Length: " + post_payload_temp.length() + "\r\n\r\n" +
              post_payload_temp + "\r\n\r\n");

              Serial.println("request sent");
  Serial.println("reply was:");
  while (client.connected()) {
    String line = client.readStringUntil('\n');
    Serial.println(line);
  };
}
void send_humidity_to_iot4_via_edge() {
  
  WiFiClient client;
  String post_payload_humidity = "{ \"measureIds\": [11], \"values\":" + String(read_dht_hum()) + ", \"logNodeAddr\": [4]}";
  //String post_payload_temp = "{ \"measureIds\": [10], \"values\":" + String(read_dht_temp()) + ", \"logNodeAddr\": [2]}";
  // String post_payload_humidity  = "{ \"measureIds\": [5], \"values\": [ \"98\"]}" ;
  
  if (!client.connect(host_iot4, httpPort_iot4)) {
    Serial.println("connection failed");
    return;
  }

  Serial.println("Try to send humidity.....");
  client.print(String("POST ") + url_iot4 + " HTTP/1.0\r\n" +
               "Host: " + host_iot4 + "\r\n" +
               "Content-Type: application/json;charset=utf-8\r\n" +
               "Content-Length: " + post_payload_humidity.length() + "\r\n\r\n" +
              post_payload_humidity + "\r\n\r\n");

              Serial.println("request sent");

  Serial.println("reply was:");
  while (client.connected()) {
    String line = client.readStringUntil('\n');
    Serial.println(line);
  };
}
